source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat | color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mmain)
xyplot(price~carat | color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=main)
xyplot(price~carat | color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=main)
xyplot(price~carat | color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=main)
x
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
?Devices
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data=state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(2,2))
head(mpg)
dimi(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
title(main="Ozone and wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot)
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par)
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may <- airquality$Month==5
may <- subset(airquality, Month==5)
points(Wind, Ozone, col="blue", pch=3)
points(may$Wind, mayOzone, col="blue", pch=3)
points(may$Wind, may$Ozone, col="blue", pch=3)
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind, notmay$Ozone, col="red", pch=13)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(v=median(airquality$Wind), lty=2, ltw=2)
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
ps <- colorRampPalette(c("red", "yellow"))
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <-colorRampPalette(c("blue", "green", alpha=.5))
p3 <-colorRampPalette(c("blue", "green"), alpha=.5)
p3(5)
plot(x, y, pch=19, col=rgb(0, .5,.5))
plot(x, y, pch=19, col=rgb(0, .5,.5, .3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPallet(cols)
pal <- colorRampPallete(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(y=hwy, data=mpg, col=drv)
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, aes(fill=drv))
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hw, data=mpg, facets=.~drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
qplot(displ, hwy, data=mpg, geom= c("point", "smooth"), facets = .~drv, method="loess")
qplot(displ, hwy, data=mpg, geom= c("point", "smooth"), facets = .~drv, method="loess")
qplot(displ, hwy, data=mpg, geom= c("point", "smooth"), facets = .~drv)
g = ggplot(displ, hwy)
g = ggplot(aes(displ, hwy))
g = ggplot(mpg,aes(displ, hwy))
g <- ggplot(mpg,aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=.5)
g+geom_point( size=4, alpha=.5m aes(color=drv))
g+geom_point( size=4, alpha=.5, aes(color=drv))
g+geom_point( aes(color=drv), labs(title="Swirl Rules!"), labs(x="Displacement", y="Hwy Mileage"))
g+geom_point( aes(color=drv)+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage"))
g+geom_point( aes(color=drv)+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point( aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point( aes(color=drv), size=2, alpha=.5)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point( aes(color=drv))+theme_bw(base_family="Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g=ggplot(testdat, aes(x=myx, y=myy))
g=ggplot(testdat, aes(x=myx, y=myy))+geom_line()
g<-ggplot(testdat, aes(x=myx, y=myy))+geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy))
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim(-3,3))
g+geom_line()+coord_cartesian(ylim=c((-3,3)))
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g=ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g<-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom=c("point", "smooth"), method="lm")
qplot(carat, price, data=diamonds, color=cut, geom=c("point", "smooth"))
qplot(carat, price, data=diamonds, color=cut)+ geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut)+ geom_smooth(method="lm")+facets(.~cut)
qplot(carat, price, data=diamonds, color=cut, facets=.~cut)+ geom_smooth(method="lm")
g<- ggplot(diamonds, aes(depth, prince))
g<- ggplot(diamonds, aes(depth, price))
summary(g)
g+geom(alpha=1/3)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat, seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat, cutpoints)
g<-ggplot(diamonds, aes(depth,price))
g<-ggplot(diamonds, aes(depth,price))+geom_point(alpha=1/3)+facet_grid(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm", size=3, color="pink")
ggpot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)
class(xyplot)
class(xyplot())
library(lattice)
class(xyplot())
?xyplot
library(nlme)
xyplot(weight~Time | Diet, BodyWeight)
?xyplot
?trellis.par.set
library(datasets)
data(airquality)
summary(airquality)
str(airquality)
qplot(Wind, Ozone, data=airquality, facets=.~factor(Month))
airquality<-transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data=airquality, facets=.~Month)
library(ggplot2)
library(ggplot2movies)
install.packages(ggplot2movies)
?panel.abline
?axis()
library(swirl)
swirl()
install.packages("fields")
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
ablines(h=1.5, col="blue")
abline(h=1.5, col="blue")
abline(h=4, col="red")
abline(h=.4, col="red")
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
dist(dataFrame)
hc <-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=.4, col="red")
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
point(cx, cy, col= c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
points(cx, cy, col= c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x,y, cx, cy)
apply(distTmp,2,which.min)
points(x, y, col= cols1[newClust], pch=19, cex=2)
tapply(x, newclust, mean)
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col= cols1, pch=8, cex=2, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, col= cols1[newClust2], pch=19, cex=2)
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col= cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers=3)
kmObj@iter
kmObj$iter
plot(x,y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col= c("black","red","green"), pch=3, cex=3, lwd=3)
plot(x,y, col=kmean(dataFrame,6)$cluster, pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19,cex=2)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
sourc("addPatt.R",local=TRUE)
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcoomp(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-(svd1$u[,1] * svd1$d[1]) %*% svd1$v
a1<-(svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2]%*%svd1$d[,2] %*%t(svd1$v[,1:2])
a2 <- svd1$u[,1:2]%*%svd1$d[,1:2] %*%t(svd1$v[,1:2])
a2 <- svd1$u[,1:2]%*%svd1$d[1:2,1:2] %*%t(svd1$v[,1:2])
a2 <- svd1$u[,1:2]%*%diag(svd1$d[1:2]) %*%t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5]%*%diag(svd1$d[1:5]) %*%t(svd1$v[,1:5]))
myImage(svd1$u[,1:10]%*%diag(svd1$d[1:10]) %*%t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subest(ssd, subject==1)
sub1<-subset(ssd, subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist<- dist(sub1[,1:3])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(sub1[,c(10:12, maxCon])
mdist<-dist(sub1[,c(10:12, maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust<-kmeans(sub1[,-2], centers=6)
kClust<-kmeans(sub1[,:(-2)], centers=6)
kClust<-kmeans(sub1[,-5:6], centers=6)
kClust<-kmeans(sub1[,-(5:6)], centers=6)
kClust<-kmeans(sub1[,1:2], centers=6)
kClust<-kmeans(sub1[,-c(562,563)], centers=6)
table(kClust$cluster,sub1$activity)
kClust<-kmeans(sub1[,-c(562,563)], centers=6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying<-which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <-make.names(cnames[[1]][wcol])
head(pm0)
x0 <-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
swirl()
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
info()
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
0
x1 <- pm1$Sample.Value
quit
bye
0
info()
bye()
swirl()
x1 <- pm1$Sample.Value
library(swirl)
swirl()
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
x1 <-pm1$Sample
x1 <- pm1$Sample.value
x1 <- pm1$Sample.Value
x1 = pm1$Sample.Value
x1 <- Sample.Value
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
info()
sdfjasd''
vmas
x1 <- pm1$Sample.Value\
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
bye()
swirl()
dim(pm0)
head(pm0)
cnames
cnames(strsplit(cnames, "|", fixed=TRUE))
cnames <-strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <-as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code ==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code ==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID ==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID ==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <-with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <-with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0, d1, by="state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim=c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3], ))
segments(rep(1,52), mrg[,2],rep(2,52), mrg[,3])
mrg[mrg$mean.x <mrg$mean.y, ]
library(tree)
?require
?library
library(dplyr, quietly = TRUE)
library(ggplot2)
library(dplyr, quietly = TRUE)
library(dplyr, quietly = TRUE)
?comment
library(dplyr, quietly = TRUE)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE, comment = NA)
library(dplyr, message = FALSE)
install.packages("gam")
install.packages("gam")
install.packages("leaps")
library(leaps)
install.packages("leaps")
library(leaps)
install.packages("glmnet")
library(glmnet)
install.packages("glmnet")
library(glmnet)
install.packages("glmnet")
library(glmnet)
install.packages("tree")
?randomforest
?randomForest
??randomForest
install.packages("randomForest")
library(randomForest)
install.packages("gbm")
actdata <- read.csv("activity.csv", sep = ",", header = TRUE)
setwd("C:/Users/User/MyGit/datasciencecoursera/RepData_PeerAssessment1")
actdata <- read.csv("activity.csv", sep = ",", header = TRUE)
numnas <- sum(is.na(actdata))
100 * numnas / nrows(actdata)
100 * numnas / nrow(actdata)
round(100 * numnas / nrow(actdata),2)
round(100 * numnas / nrow(actdata),0)
