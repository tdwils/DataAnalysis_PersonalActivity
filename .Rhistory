sourc("addPatt.R",local=TRUE)
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcoomp(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-(svd1$u[,1] * svd1$d[1]) %*% svd1$v
a1<-(svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2]%*%svd1$d[,2] %*%t(svd1$v[,1:2])
a2 <- svd1$u[,1:2]%*%svd1$d[,1:2] %*%t(svd1$v[,1:2])
a2 <- svd1$u[,1:2]%*%svd1$d[1:2,1:2] %*%t(svd1$v[,1:2])
a2 <- svd1$u[,1:2]%*%diag(svd1$d[1:2]) %*%t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5]%*%diag(svd1$d[1:5]) %*%t(svd1$v[,1:5]))
myImage(svd1$u[,1:10]%*%diag(svd1$d[1:10]) %*%t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subest(ssd, subject==1)
sub1<-subset(ssd, subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist<- dist(sub1[,1:3])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(sub1[,c(10:12, maxCon])
mdist<-dist(sub1[,c(10:12, maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust<-kmeans(sub1[,-2], centers=6)
kClust<-kmeans(sub1[,:(-2)], centers=6)
kClust<-kmeans(sub1[,-5:6], centers=6)
kClust<-kmeans(sub1[,-(5:6)], centers=6)
kClust<-kmeans(sub1[,1:2], centers=6)
kClust<-kmeans(sub1[,-c(562,563)], centers=6)
table(kClust$cluster,sub1$activity)
kClust<-kmeans(sub1[,-c(562,563)], centers=6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying<-which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <-make.names(cnames[[1]][wcol])
head(pm0)
x0 <-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
swirl()
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
info()
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
0
x1 <- pm1$Sample.Value
quit
bye
0
info()
bye()
swirl()
x1 <- pm1$Sample.Value
library(swirl)
swirl()
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
x1 <-pm1$Sample
x1 <- pm1$Sample.value
x1 <- pm1$Sample.Value
x1 = pm1$Sample.Value
x1 <- Sample.Value
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
info()
sdfjasd''
vmas
x1 <- pm1$Sample.Value\
x1 <- pm1$Sample.Value
x1 <- pm1$Sample.Value
bye()
swirl()
dim(pm0)
head(pm0)
cnames
cnames(strsplit(cnames, "|", fixed=TRUE))
cnames <-strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <-as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code ==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code ==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID ==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID ==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <-with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <-with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0, d1, by="state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim=c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3], ))
segments(rep(1,52), mrg[,2],rep(2,52), mrg[,3])
mrg[mrg$mean.x <mrg$mean.y, ]
library(tree)
?require
setwd("C:/Users/User/MyGit/datasciencecoursera/RepData_PeerAssessment1")
knitr::opts_chunk$set(echo = TRUE)
?unzip
fileURL <- "https://github.com/tdwils/RepData_PeerAssessment1/blob/master/activity.zip"
download.file(fileUURL, destfile = "activity.zip")
download.file(fileURL, destfile = "activity.zip")
unzip("activity.zip")
setwd("C:/Users/User/MyGit/datasciencecoursera/RepData_PeerAssessment1")
U
fileURL <- "https://github.com/tdwils/RepData_PeerAssessment1/blob/master/activity.zip"
download.file(fileURL, destfile = "activity.zip")
unzip("activity.zip")
unzip("activity.zip")
download.file(fileURL, destfile = "activity.zip")
unzip("rep_activity_data.zip")
utils::unzip("rep_activity_data.zip")
utils::unzip("rep_activity_data.zip")
help(unzip)
data <- read.csv("activity.csv", sep = ",", header = TRUE)
View(data)
head(data)
?sapply
str(data)
library(dplyr)
data$date <- as.Date(data$date)
str(data)
days <- group_by(data, date)
head(days)
?summarize
View(days)
totalperday <- summarize(days, total = sum(steps, na.rm=TRUE))
View(totalperday)
head(totalperday)
qplot(total, data = totalperday)
library(ggplot2)
qplot(total, data = totalperday)
qplot(date, data = totalperday)
View(totalperday)
qplot(total, data = totalperday)
qplot(total, data = totalperday, xlab = "Steps per day")
binwidth = 1000)
qplot(total, data = totalperday, xlab = "Steps per day",
binwidth = 1000)
qplot(total, data = totalperday, xlab = "Steps per day",
binwidth = 1000, main = "Histogram for Total Steps per Day")
qplot(total, data = totalperday, xlab = "Steps per day",
binwidth = 2000, main = "Histogram for Total Steps per Day")
qplot(total, data = totalperday, xlab = "Steps per day",
binwidth = 5000, main = "Histogram for Total Steps per Day")
qplot(total, data = totalperday, xlab = "Steps per day",
binwidth = 1000, main = "Histogram for Total Steps per Day")
qplot(total, data = totalperday, xlab = "Steps per day",
binwidth = 2000, main = "Histogram for Total Steps per Day")
qplot(total, data = totalperday, xlab = "Steps per day",
binwidth = 2000, main = "Histogram for Total Steps per Day",
col = I("red"))
actdata <- read.csv("activity.csv", sep = ",", header = TRUE)
actdata$date <- as.Date(actdata$date)
days <- group_by(actdata, date)
totalperday <- summarize(days, total = sum(steps, na.rm=TRUE))
qplot(total, data = totalperday, xlab = "Steps per day",
binwidth = 2000, main = "Histogram for Total Steps per Day",
col = I("red"))
ggplot(data = totalperday, aes(totalperday$total)) +
geom_histogram(breaks=seq(0, 24000, by=4000), col="red") +
labs(title="Histogram for Total Steps per Day") +
labs(x = "Steps per day")
ggplot(data = totalperday, aes(totalperday$total)) +
geom_histogram(breaks=seq(0, 24000, by=2000), col="red") +
labs(title="Histogram for Total Steps per Day") +
labs(x = "Steps per day")
ggplot(data = totalperday, aes(totalperday$total)) +
geom_histogram(breaks=seq(0, 24000, by=2000), col="red") +
labs(title="Histogram for Total Steps per Day") +
labs(x = "Steps per day") +
scale_x_continuous(limits=c(0, 24000), breaks=seq(0,24000,4))
ggplot(data = totalperday, aes(totalperday$total)) +
geom_histogram(breaks=seq(0, 24000, by=2000), col="red") +
labs(title="Histogram for Total Steps per Day") +
labs(x = "Steps per day") +
scale_x_continuous(limits=c(0, 24000), breaks=seq(0,24000,4000))
meanperday <- mean(totalperday)
View(totalperday)
days <- group_by(actdata, date)
totals <- summarize(days, totalperday = sum(steps, na.rm=TRUE))
actdata <- read.csv("activity.csv", sep = ",", header = TRUE)
actdata$date <- as.Date(actdata$date)
days <- group_by(actdata, date)
totals <- summarize(days, totalperday = sum(steps, na.rm=TRUE))
ggplot(data = totals, aes(totals$totalperday)) +
geom_histogram(breaks=seq(0, 24000, by=2000), col="red") +
labs(title="Histogram for Total Steps per Day") +
labs(x = "Steps per day") +
scale_x_continuous(limits=c(0, 24000), breaks=seq(0,24000,4000))
meanperday <- mean(totals$totalperday)
medianperday <- median(totals$totalperday)
print("The mean of the total number of steps taken per day is ",  meanperday, ".")
print("The mean of the total number of steps taken per day is ",  meanperday, ".\n")
The median of the total number of steps taken per day is medianperday.
cat("The mean of the total number of steps taken per day is ",  meanperday, ".\n")
?cat
?as.integer
cat("The mean of the total number of steps taken per day is",  as.integer(meanperday), ".\n")
cat("The median of the total number of steps taken per day is",  medianperday, ".\n")
?cat
cat("The mean of the total number of steps taken per day is",  as.integer(meanperday), ".\n", sep = "")
cat("The mean of the total number of steps taken per day is ",  as.integer(meanperday), ".\n", sep = "")
cat("The median of the total number of steps taken per day is ",  medianperday, ".\n")
cat("The median of the total number of steps taken per day is",  medianperday, ".\n")
cat("The median of the total number of steps taken per day is ",  medianperday, ".\n", sep = "")
View(days)
View(actdata)
intervals <- group_by(actdata, interval)
avgintervals <- summarize(intervals, avg = mean(steps, na.rm=TRUE))
View(avgintervals)
ggplot(avgintervals, aes(x = interval, y = avgintervals$avg)) +
geom_line()
ggplot(avgintervals, aes(x = interval, y = avgintervals$avg)) +
geom_line() +
labs(x = "Interval", y = "Average number of steps") +
labs(title="Number of steps taken per interval, averaged over all days")
ggplot(avgintervals, aes(x = interval, y = avgintervals$avg)) +
geom_line() +
labs(x = "Interval", y = "Average number of steps") +
labs(title="Steps per interval, averaged over all days")
maxinterval <- max(avginterval$avg)
maxinterval <- max(avgintervals$avg)
maxsteps <- max(avgintervals$avg)
View(avgintervals)
maxsteps <- avgintervals(max(avgintervals$avg), avgintervals$interval)
maxsteps <- avgintervals[max(avgintervals$avg), avgintervals$interval]
View(avgintervals)
maxsteps <- avgintervals[max(avgintervals$avg), ]
View(maxsteps)
?which
ind <- which(avgintervals$avg == max(avgintervals$avg))
maxinterval <- avgintervals$interval[ind]
avginterval[835,]
avgintervals[835,]
avgintervals[104,]
cat("The 5-minute interval that contains the maximum number of steps, on average across all the days, is interval #",  maxinterval, ".\n", sep = "")
numnas <- sum(is.na(actdata))
View(actdata)
cat("The total number of missing values in the dataset is",  numnas, ".\n", sep = "")
datafilled <- actdata
indna <- which(is.na(datafilled$steps))
datafilled$steps[indna] <- avgintervals$avg[indna]
sum(is.na(datafilled))
View(datafilled)
View(datafilled)
View(avgintervals)
datafilled <- actdata
indna <- which(is.na(datafilled$steps))
datafilled$steps[indna] <- avgintervals[which("interval"==datafilled$interval[indna]), "avg"]
which(is.na(datafilled$steps))
View(datafilled)
datafilled$steps<- avgintervals[which("interval"==datafilled$interval[indna]), "avg"]
datafilled$steps[inda]<- avgintervals[which("interval"==datafilled$interval[indna]), "avg"]
datafilled$steps[indna]<- avgintervals[which("interval"==datafilled$interval[indna]), "avg"]
View(datafilled)
datafilled <- actdata
indna <- which(is.na(datafilled$steps))
datafilled$steps[indna]<- avgintervals["interval"==datafilled$interval[indna], "avg"]
which(is.na(datafilled$steps))
View(datafilled)
head(datafilled$steps[indna])
datafilled <- actdata
indna <- which(is.na(datafilled$steps))
head(datafilled$steps[indna])
head(datafilled$interval[indna])
View(avgintervals)
head(avgintervals$avg[which("interval"==datafilled$interval[indna])])
head(which("interval"==datafilled$interval[indna]))
maxinterval <- avgintervals[ind, "avg"]
View(maxinterval)
cat("The 5-minute interval that contains the maximum number of steps, on average across all the days, is interval #",  maxinterval, ".\n", sep = "")
maxinterval <- avgintervals$avg[ind]
cat("The 5-minute interval that contains the maximum number of steps, on average across all the days, is interval #",  maxinterval, ".\n", sep = "")
maxinterval <- avgintervals$interval[ind]
cat("The 5-minute interval that contains the maximum number of steps, on average across all the days, is interval #",  maxinterval, ".\n", sep = "")
datafilled <- actdata
indna <- which(is.na(datafilled$steps))
intervalsna <- datafilled$interval[inda]
intervalsna <- datafilled$interval[indna]
View(datafilled)
datafilled$steps[indna]<- avgintervals["interval"==datafilled$interval[indna], "avg"]
head(datafilled$steps[indna])
View(datafilled)
head(which("interval"==datafilled$interval[indna]))
datafilled <- actdata
indna <- which(is.na(datafilled$steps))
head(which("interval"==datafilled$interval[indna]))
avginterval["interval"= 5, "avg"]
avgintervals["interval"= 5, "avg"]
avgintervals["interval"== 5, "avg"]
View(avgintervals)
avgintervals[which("interval"== 5), "avg"]
avgintervals[which(avgintervals$interval== 5), "avg"]
avgintervals[which(avgintervals$interval==datafilled$interval[2], "avg"]
avgintervals[which(avgintervals$interval==datafilled$interval[2], "avg"]
avgintervals[which(avgintervals$interval==datafilled$interval[2]), "avg"]
datafilled$steps[indna]<- avgintervals[which(avgintervals$interval==datafilled$interval[indna]), "avg"]
View(datafilled)
?where
?which
avgintervals[which(avgintervals$interval== 5), ]
avgindices <- which(avgintervals$interval==datafilled$interval[indna])
datafilled$steps[inda] <- avgintervals$avg[avgindices]
datafilled$steps[indna] <- avgintervals$avg[avgindices]
View(datafilled)
View(avgintervals)
data_imp <- actdata
indna <- which(is.na(data_imp$steps))
avgindices <- which(avgintervals$interval==data_imp$interval[indna])
data_imp$steps[indna] <- avgintervals$avg[avgindices]
View(data_imp)
View(data_imp)
days_imp <- group_by(datafilled, date)
totals_imp <- summarize(days_imp, totalperday = sum(steps, na.rm=TRUE))
View(days_imp)
str(days_imp)
days_imp <- group_by(data_imp, date)
summary(days_imp)
str(days_imp)
days_imp <- group_by(data_imp, date)
totals_imp <- summarize(days_imp, totalperday = sum(steps, na.rm=TRUE))
View(totals_imp)
ggplot(data = totals_imp, aes(totals_imp$totalperday)) +
geom_histogram(breaks=seq(0, 24000, by=2000), col="red") +
labs(title="Histogram for Total Steps per Day (missing values imputed)") +
labs(x = "Steps per day") +
scale_x_continuous(limits=c(0, 24000), breaks=seq(0,24000,4000))
meanperday_imp <- mean(totals_imp$totalperday)
medianperday_imp <- median(totals_imp$totalperday)
cat("The mean of the total number of steps taken per day is ",  as.integer(meanperday_imp), "steps.\n", sep = "")
cat("The mean of the total number of steps taken per day is ",  as.integer(meanperday_imp), " steps.\n", sep = "")
cat("The median of the total number of steps taken per day is ",  medianperday_imp, "steps.\n", sep = "")
cat("The median of the total number of steps taken per day is ",  medianperday_imp, " steps.\n", sep = "")
?weekdays
dayofweek <- weekdays(data_imp$date)
?if
data_imp <- mutate(data_imp, day = weekdays(data_imp$date))
View(data_imp)
str(data_imp)
data_imp <- mutate(data_imp, day = as.factor(weekdays(data_imp$date)))
str(data_imp)
if (data_imp$day %in% c("Sunday", "Saturday")){
data_imp$day = "weekend"
}else {ddata_imp$day = "weekday"
}
if (data_imp$day %in% c("Sunday", "Saturday")){
data_imp$day = "weekend"
}else {data_imp$day = "weekday"
}
data_imp <- actdata
indna <- which(is.na(data_imp$steps))
avgindices <- which(avgintervals$interval==data_imp$interval[indna])
data_imp$steps[indna] <- avgintervals$avg[avgindices]
data_imp2 <- mutate(data_imp, day = as.factor(weekdays(data_imp$date)))
if (data_imp2$day %in% c("Sunday", "Saturday")){
data_imp2$day = "weekend"
}else {data_imp2$day = "weekday"
}
?%in?
data_imp2 <- mutate(data_imp, day = weekdays(data_imp$date))
View(data_imp2)
if (data_imp2$day %in% c("Sunday", "Saturday")){
data_imp2$day = "weekend"
}else {data_imp2$day = "weekday"
}
View(data_imp2)
sum(data_imp2$day=="weekend")
sum(data_imp2$day=="weekday")
data_imp2 <- mutate(data_imp, day = weekdays(data_imp$date))
sum(data_imp2$day=="Sunday")
sum(data_imp2$day=="Saturday")
sum(data_imp2$day=="Monday")
data_imp2 <- mutate(data_imp, day = weekdays(data_imp$date))
if (data_imp2$day=="Sunday" | data_imp2$day=="Saturday"){
data_imp2$day = "weekend"
}else {data_imp2$day = "weekday"
}
?weekday
?weekdays
weekdays()
data_imp2 <- mutate(data_imp, day = weekdays(data_imp$date))
data_imp2["date" == "Sunday" | "date" == "Saturday"] <- "weekend"
sum(data_imp2$day=="weekend")
sum(data_imp2$day=="Sunday")
data_imp2$day["date" == "Sunday" | "date" == "Saturday"] <- "weekend"
sum(data_imp2$day=="Sunday")
data_imp2$day[data_imp2["date" == "Sunday" | "date" == "Saturday"]] <- "weekend"
data_imp2$day[which(data_imp2$date=="Sunday" | data_imp2$date=="Saturday"] <- "weekend"
data_imp2$day[which(data_imp2$date=="Sunday" | data_imp2$date=="Saturday")] <- "weekend"
?wday
data_imp2 <- mutate(data_imp, wday = weekdays(data_imp$date))
data_imp2$wday[which(data_imp2$date=="Sunday" | data_imp2$date=="Saturday")] <- "weekend"
str(data_imp2)
data_imp2$wday[which(data_imp2$wday=="Sunday" | data_imp2$wday=="Saturday")] <- "weekend"
View(data_imp2)
data_imp2$wday[which(data_imp2$wday!="weekend")] <- "weekday"
sum(data_imp2$day=="weekday")
sum(data_imp2$wday=="weekday")
sum(data_imp2$wday=="weekend")
?factor
data_imp2$wday <- factor(data_imp2$wday)
str(data_imp2)
ggplot(avgwdays, aes(x = interval, y = avgwdays$avg)) +
geom_line() +
labs(x = "Interval", y = "Average number of steps") +
labs(title="Steps per interval, averaged over all days") +
facet_grid(. ~ wday)
wdaygroups <- group_by(data_imp2, wday)
avgwdays <- summarize(wdaygroups, avg = mean(steps, na.rm=TRUE))
View(avgwdays)
wdaygroups <- group_by(data_imp2, interval, wday)
avgwdays <- summarize(wdaygroups, avg = mean(steps, na.rm=TRUE))
View(avgwdays)
ggplot(avgwdays, aes(x = interval, y = avg)) +
geom_line() +
labs(x = "Interval", y = "Average number of steps") +
labs(title="Average Steps per Interval") +
facet_grid(. ~ wday)
ggplot(avgwdays, aes(x = interval, y = avg)) +
geom_line() +
labs(x = "Interval", y = "Average number of steps") +
labs(title="Average Steps per Interval") +
facet_grid(wday ~ .)
cat("After imputing missing data, the mean of the total number of steps taken per day is ",  as.integer(meanperday_imp), " steps.\n", sep = "")
